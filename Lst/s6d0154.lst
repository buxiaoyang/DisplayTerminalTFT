C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE S6D0154
OBJECT MODULE PLACED IN Src\s6d0154.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Src\s6d0154.c BROWSE INCDIR(.\Src) DEBUG OBJECTEXTEND PRINT(.\Lst\s6d0154.l
                    -st) SRC(.\Obj\s6d0154.SRC)

line level    source

   1          //#include <reg52.h>
   2          #include "STC_NEW_8051.H"
   3          #include"head.h"        //IO define
   4          
   5          #include"s6d0154_drv.h" //包含_24TFT-OK的正确初始化程序  
   6          
   7          #include"picture.h"
   8          #include"chinese.h"
   9          #include"char.h"
  10          //------------------------------------------------------------------
  11          uint colors[]={
  12          //   0      1      2      3      4      5      6      7
  13          0xf800,0x07e0,0x001f,0xffe0,0x0000,0x07ff,0xf81f,0xffff  //颜色数据
  14          //  红     绿     蓝     黄     黑     青     紫     白
  15          };
  16          //******************************************************************
  17          //  
  18          //------------------------------------------------------------------
  19          void delayms(unsigned int tt) //0.5
  20          {
  21   1          unsigned char i;
  22   1              unsigned char j;
  23   1          while(tt>0)
  24   1          {
  25   2              tt--;
  26   2              for(j=0;j<5;j++)
  27   2                  {
  28   3                          for(i=0;i<168;i++)
  29   3                              {
  30   4                              }
  31   3              }
  32   2          }
  33   1      }
  34          /*
  35          void delay(long tt)
  36          {
  37              while(tt>0)
  38              {
  39                  tt--;
  40              }
  41          }
  42          */
  43          void Write_DATA(unsigned int i,unsigned int j)
  44          {
  45   1          //8080 interface
  46   1          LCD_CS = 0;
  47   1              LCD_DC = 1;
  48   1              LCD_RD = 1;
  49   1              P0  = j;
  50   1              P2  = i;
  51   1              LCD_WR = 0;
  52   1              LCD_WR = 1;
  53   1              LCD_CS = 1;
  54   1      }
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 2   

  55          /*
  56          void Write_DAT_18(unsigned int i,unsigned int j,unsigned int k)
  57          {
  58              //8080 interface
  59              CS0 = 0;
  60                  DC0 = 1;
  61                  RD0 = 1;
  62                  P2  = i;
  63                  P0  = j;
  64                  WR0 = 0;
  65                  WR0 = 1;
  66                  P2  = k;
  67                  WR0 = 0;
  68                  WR0 = 1;
  69                  CS0 = 1;
  70          }
  71          */
  72          void Write_COMD(unsigned int i,unsigned int j)
  73          {
  74   1              //8080 interface
  75   1          LCD_CS = 0;  
  76   1          LCD_RD = 1;
  77   1          LCD_DC = 0;
  78   1              P0  = j;         
  79   1              P2  = i;
  80   1              LCD_WR = 0;
  81   1              LCD_WR = 1;
  82   1              LCD_CS = 1;
  83   1      }
  84          //******************************************************************
  85          //  分颜色显示
  86          //------------------------------------------------------------------
  87          void Display_Red(void)
  88          {  
  89   1          int i,j,k=0;
  90   1           
  91   1              LCD_CS =0;  //打开片选使能
  92   1              Address_set(0,0,239,319);
  93   1              
  94   1          Write_COMD(0x00,0x22); 
  95   1          for(i=0;i<320;i++)
  96   1          {
  97   2              for(j=0;j<240;j++)
  98   2                  {
  99   3                  Write_DATA(0xf8,0x00);//data_out18(0xfc,0x00,0x00);
 100   3                  }
 101   2          }
 102   1      }
 103          void Display_Green(void)
 104          {  
 105   1          int i,j;
 106   1         
 107   1              LCD_CS =0;  //打开片选使能
 108   1              Address_set(0,0,239,319);
 109   1         
 110   1          Write_COMD(0x00,0x22); 
 111   1          for(i=0;i<320;i++)
 112   1          {
 113   2              for(j=0;j<240;j++)
 114   2                  {
 115   3                  Write_DATA(0x07,0xe0);
 116   3                  //Write_Data_18(0x03,0xf0,0x00);
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 3   

 117   3              }
 118   2          }
 119   1      }
 120          void Display_Blue(void)
 121          {  
 122   1          int i,j;
 123   1           
 124   1          Write_COMD(0x00,0x20);
 125   1          Write_DATA(0x00,0x00);
 126   1          Write_COMD(0x00,0x21);
 127   1          Write_DATA(0x00,0x00);
 128   1         
 129   1          Write_COMD(0x00,0x22);
 130   1          for(i=0;i<320;i++)
 131   1          {
 132   2                  for(j=0;j<240;j++)
 133   2              {
 134   3                          Write_DATA(0x00,0x1f);
 135   3                  //Write_Data_18(0x00,0x0f,0xc0);
 136   3              }
 137   2          }
 138   1      }
 139          void Display_White(void)
 140          {
 141   1          int i,j;
 142   1          
 143   1              LCD_CS =0;  //打开片选使能
 144   1              Address_set(0,0,239,319);
 145   1          for(i=0;i<320;i++)
 146   1          {
 147   2              for(j=0;j<240;j++)
 148   2                  {
 149   3                  Write_DATA(0xff,0xff);
 150   3                  //Write_Data_18(0xff,0xff,0xc0);
 151   3              }
 152   2          }
 153   1      }
 154          void Display_Black(void)
 155          {  
 156   1          int i,j,k;
 157   1           
 158   1              LCD_CS =0;  //打开片选使能
 159   1              Address_set(0,0,239,319);
 160   1          for(i=0;i<240;i++)
 161   1          {
 162   2              Write_DATA(0xff,0xff);
 163   2              //Write_DATA_18(0xff,0xff,0xc0);
 164   2          }
 165   1          //---------------------------------
 166   1          for(i=0;i<318;i++)  //加外框
 167   1          {
 168   2              for(k=0;k<1;k++)
 169   2                  {
 170   3                  Write_DATA(0xff,0xff);
 171   3                      //WRITE_DATA_18(0xff,0xff,0xc0);
 172   3                  }
 173   2                  for(j=0;j<238;j++)
 174   2                  {
 175   3                          Write_DATA(0x00,0x00);
 176   3                          //Write_DATA_18(0x00,0x00,0x00);
 177   3                  }
 178   2                  for(k=0;k<1;k++)
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 4   

 179   2                  {
 180   3                      Write_DATA(0xff,0xff);
 181   3                  //Write_DATA_18(0xff,0xff,0xc0);
 182   3                  }
 183   2          }
 184   1          //---------------------------------
 185   1          for(i=0;i<240;i++)
 186   1          {
 187   2              Write_DATA(0xff,0xff);
 188   2              //Write_Data_18(0xff,0xff,0xc0);
 189   2          }
 190   1      }
 191          //******************************************************************
 192          //  图片显示(仅240*80dot模式)
 193          //------------------------------------------------------------------
 194          void Display_Image(void)
 195          {
 196   1          unsigned char i,j,t;
 197   1         
 198   1              LCD_CS =0;  //打开片选使能
 199   1              Address_set(0,0,239,319);
 200   1          LCD_DC=1;
 201   1          for(t=4;t!=0;t--)  //显示4次->填满240x320空间
 202   1          {
 203   2      #pragma asm
 204   2                      mov DPTR, #Image
 205   2      #pragma endasm
 206   2      //        unsigned int  k=0;
 207   2              
 208   2              for(j=80;j!=0;j--)
 209   2              {
 210   3                  for(i=240;i!=0;i--)
 211   3                  {
 212   4                      LCD_WR = 0;
 213   4      #pragma asm
 214   4                      clr A
 215   4                      movc A, @A+DPTR
 216   4                      mov P2, A
 217   4                      inc DPTR
 218   4                      clr A
 219   4                      movc A, @A+DPTR
 220   4                      mov P0, A
 221   4                      inc DPTR
 222   4      #pragma endasm
 223   4                      LCD_WR = 1;
 224   4      //                Write_DATA(Image[k++],Image[k++]);
 225   4                  }
 226   3              }
 227   2          }
 228   1      }
 229          //******************************************************************
 230          //  
 231          //------------------------------------------------------------------
 232          void LCD_Writ_Bus(char VH,char VL)      //并行数据写入函数
 233          {
 234   1          LCD_DataPortH=VH;     //高位P口
 235   1              LCD_DataPortL=VL;         //低位P口     
 236   1              LCD_WR=0;
 237   1              LCD_WR=1; 
 238   1      }
 239          void LCD_Write_COM(char VH,char VL)         //发送命令
 240          {       
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 5   

 241   1          LCD_DC=0;
 242   1              LCD_Writ_Bus(VH,VL);
 243   1      }
 244          void LCD_Write_DATA(char VH,char VL)    //发送数据
 245          {
 246   1          LCD_DC=1;
 247   1              LCD_Writ_Bus(VH,VL);
 248   1      }
 249          //******************************************************************
 250          //  
 251          //------------------------------------------------------------------
 252          void Pant(char VH,char VL)
 253          {
 254   1              unsigned char i;
 255   1              unsigned char j;
 256   1              
 257   1              LCD_CS =0;  //打开片选使能
 258   1              Address_set(0,0,239,319);
 259   1          LCD_DataPortH=VH;     //高位P口
 260   1              LCD_DataPortL=VL;         //低位P口     
 261   1          LCD_DC=1;
 262   1          for(i=160;i!=0;i--)
 263   1              {
 264   2              for (j=240;j!=0;j--)
 265   2              {
 266   3                  LCD_WR=0;
 267   3                  LCD_WR=1; 
 268   3                  LCD_WR=0;
 269   3                  LCD_WR=1; 
 270   3                  }
 271   2          }
 272   1          LCD_CS =1;  //关闭片选使能
 273   1      }
 274          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
 275          {
 276   1      
 277   1          LCD_Write_COM(0x00,0x20);LCD_Write_DATA(x1>>8,x1);  //设置X坐标位置
 278   1          LCD_Write_COM(0x00,0x21);LCD_Write_DATA(y1>>8,y1);  //设置Y坐标位置
 279   1                       
 280   1          LCD_Write_COM(0x00,0x37);LCD_Write_DATA(x1>>8,x1);  //开始X
 281   1              LCD_Write_COM(0x00,0x39);LCD_Write_DATA(y1>>8,y1);  //开始Y
 282   1          LCD_Write_COM(0x00,0x36);LCD_Write_DATA(x2>>8,x2);  //结束X
 283   1              LCD_Write_COM(0x00,0x38);LCD_Write_DATA(y2>>8,y2);  //结束Y
 284   1      
 285   1              LCD_Write_COM(0x00,0x22);                                                                                
 286   1      }
 287          //******************************************************************
 288          //  写汉字子函数
 289          //------------------------------------------------------------------
 290          void ChineseChar(uint x,uint y,int size,uint For_color,uint Bk_color ,char c)
 291          {
 292   1          int e,i,j;
 293   1          int  ed;
 294   1         
 295   1          uint  ncols;
 296   1          uint  nrows;
 297   1          uint  nbytes;
 298   1      
 299   1          uchar *pfont;
 300   1          uchar *pchar;
 301   1          uchar *fonttable[]={(uchar *)hz16,(uchar *)hz24 , (uchar *)hz32};
 302   1         
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 6   

 303   1          pfont=(uchar *)fonttable[size];
 304   1      
 305   1          if(size==0)
 306   1          {
 307   2              ncols =16-1;
 308   2              nrows =16-1;
 309   2              nbytes =32;      //(16*16)/8
 310   2          }
 311   1          else
 312   1          {    
 313   2              if(size==1)
 314   2              {
 315   3                  ncols =24-1;
 316   3                  nrows =24-1;
 317   3                  nbytes =72;  //(24*24)/8
 318   3              }
 319   2              else
 320   2              {
 321   3                  if(size==2)
 322   3                  {
 323   4                      ncols =32-1;
 324   4                      nrows =32-1;
 325   4                      nbytes =132;   //(32*32)/8
 326   4                  }
 327   3              }
 328   2          }
 329   1          pchar=pfont + (nbytes*(c-1));
 330   1      
 331   1          Address_set(x,  y, x+nrows,y+ncols);
 332   1          //---------------------------------
 333   1          for(i=0;i<nbytes;i++)
 334   1          {
 335   2              ed=*pchar++;
 336   2              if(size==0)
 337   2              {
 338   3                  if(i%2==0)
 339   3                      e=8;
 340   3                  else
 341   3                      e=4;
 342   3              }
 343   2              else
 344   2                  e=8;
 345   2              for(j=0;j<e;j++)
 346   2              {//unsigned char temp;
 347   3                  if((ed>>j)&0x01)
 348   3                  { 
 349   4                     //temp = For_color&0x00ff
 350   4                         LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 351   4                      }
 352   3                  else
 353   3                  {
 354   4                      LCD_Write_DATA( Bk_color>>8 ,  Bk_color);  //backcolor
 355   4                      }
 356   3              }
 357   2          }
 358   1      }
 359          //******************************************************************
 360          //  字符显示子函数
 361          //------------------------------------------------------------------
 362          void LCD_ShowChar(uint x,uint y,uint For_color,uint Bk_color, char ch)
 363          {       
 364   1          uchar temp , Bytes;
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 7   

 365   1          uchar pos,t;
 366   1          uint  CHAR_W,CHAR_H;
 367   1         
 368   1          //CHAR_W = 8;         //8*16
 369   1          //CHAR_H = 16;
 370   1      
 371   1          CHAR_W = 16;         //16*24
 372   1          CHAR_H = 24;
 373   1      
 374   1          if(x>(LCD_SIZE_X-CHAR_W)||y>(LCD_SIZE_Y-CHAR_H))
 375   1              return;
 376   1         
 377   1          Address_set(x, y, x+CHAR_W-1, y+CHAR_H-1);
 378   1          ch = ch-32;                       //按照ASCII编码顺序的到相应字母的编码
 379   1          Bytes = (CHAR_W*CHAR_H)/8;
 380   1          for(pos=0;pos<Bytes;pos++)  //CHAR_H        (CHAR_W*CHAR_H)/8
 381   1          {
 382   2              //temp= Font8x16[ch][pos];
 383   2              //temp= Font16x24[ch][pos];
 384   2              temp= Font16x24[ch][pos];
 385   2            
 386   2              for(t=0;t<8;t++) //CHAR_W
 387   2              {                 
 388   3                     if(temp&0x80)
 389   3                         LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 390   3                     else 
 391   3                         LCD_Write_DATA(Bk_color>>8 , Bk_color );  //backcolor
 392   3                  temp<<=1; 
 393   3              }
 394   2          }
 395   1      }  
 396          //******************************************************************
 397          //  显示字符串子函数    x,y:起点坐标    *p:字符串起始地址
 398          //------------------------------------------------------------------
 399          void LCD_ShowString(uint x,uint y,uint For_color,uint Bk_color,char *p)
 400          {         
 401   1          while(*p!='\0')
 402   1          {       
 403   2              LCD_ShowChar(x,y,For_color,Bk_color,*p);
 404   2              //x+=8;
 405   2              x+=16;
 406   2              p++;
 407   2          }
 408   1      }
 409          //******************************************************************
 410          //  
 411          //------------------------------------------------------------------
 412          void LCD_Init(void)
 413          {
 414   1      //    LCD_RST=1;
 415   1      //    delayms(5);
 416   1              LCD_RST=0;
 417   1              delayms(5);
 418   1              LCD_RST=1;
 419   1      //      delayms(5);
 420   1              LCD_CS =0;  //打开片选使能
 421   1          //---------------------------------
 422   1              LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x00,0x00);  // Power Control 1  current consumption  STB
 423   1              delayms(10);
 424   1              
 425   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x00,0x1c);  // Power Control 2
 426   1              LCD_Write_COM(0x00,0x12); LCD_Write_DATA(0x12,0x12);  // Power Control 3  BT2-0, DC11-10, DC21-20, DC31-3
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 8   

             -0
 427   1              LCD_Write_COM(0x00,0x13); LCD_Write_DATA(0x00,0x41);  // Power Control 4  DCR_EX=0, DCR2-0, GVD6-0
 428   1              LCD_Write_COM(0x00,0x14); LCD_Write_DATA(0x40,0x50);  // Power Control 5  VCOMG=0, VCM6-0, VCMR=0, VML6-0
 429   1              LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x08,0x00);  // Power Control 1 
 430   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x01,0x1c);  // Power Control 2
 431   1              delayms(300);//300ms
 432   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x03,0x1c);  // Power Control 2
 433   1              delayms(300);//300ms
 434   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x07,0x1c);  // Power Control 2
 435   1              delayms(300);//300ms
 436   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x1c);  // Power Control 2
 437   1              delayms(600);//600ms
 438   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x39);  // Power Control 2
 439   1              delayms(500);//500ms
 440   1              LCD_Write_COM(0x00,0x01); LCD_Write_DATA(0x01,0x28);  // Driver Output Control
 441   1              LCD_Write_COM(0x00,0x02); LCD_Write_DATA(0x01,0x00);  // LCD-Driving-Waveform Control
 442   1              LCD_Write_COM(0x00,0x03); LCD_Write_DATA(0x10,0x30);  // Entry Mode
 443   1              LCD_Write_COM(0x00,0x08); LCD_Write_DATA(0x08,0x08);  // Frame Cycle Control 
 444   1              LCD_Write_COM(0x00,0x0b); LCD_Write_DATA(0x11,0x05);  // Frame Cycle Control
 445   1              LCD_Write_COM(0x00,0x0c); LCD_Write_DATA(0x00,0x00);  // External Display Interface Control 
 446   1          //---------------------------------
 447   1          LCD_Write_COM(0x00,0x15); LCD_Write_DATA(0x00,0x20);  //VCI Recycling (R15H)                //              VCIR=010         0X0020
 448   1              LCD_Write_COM(0x00,0x30); LCD_Write_DATA(0x00,0x00);  //                SCN 0   Start from G1
 449   1              LCD_Write_COM(0x00,0x34); LCD_Write_DATA(0x01,0x3f);  //                SE1 = 100111111( 319)
 450   1              LCD_Write_COM(0x00,0x35); LCD_Write_DATA(0x00,0x00);  //                SS1 = 000000000
 451   1              LCD_Write_COM(0x00,0x36); LCD_Write_DATA(0x00,0xef);  //                HEA = 011101111(239)
 452   1              LCD_Write_COM(0x00,0x37); LCD_Write_DATA(0x00,0x00);  //                HSA = 000000000 
 453   1              LCD_Write_COM(0x00,0x38); LCD_Write_DATA(0x01,0x3f);  //                VEA = 100111111( 319)
 454   1          LCD_Write_COM(0x00,0x39); LCD_Write_DATA(0x00,0x00);  //            VSA = 000000000 
 455   1          LCD_Write_COM(0x00,0x50); LCD_Write_DATA(0x01,0x01);  // Gamma Control
 456   1          //---------------------------------
 457   1              LCD_Write_COM(0x00,0x51); LCD_Write_DATA(0x09,0x03);
 458   1              LCD_Write_COM(0x00,0x52); LCD_Write_DATA(0x0b,0x08);
 459   1              LCD_Write_COM(0x00,0x53); LCD_Write_DATA(0x08,0x05);
 460   1              LCD_Write_COM(0x00,0x54); LCD_Write_DATA(0x01,0x01);
 461   1              LCD_Write_COM(0x00,0x55); LCD_Write_DATA(0x0d,0x06);
 462   1              LCD_Write_COM(0x00,0x56); LCD_Write_DATA(0x0e,0x0a);
 463   1              LCD_Write_COM(0x00,0x57); LCD_Write_DATA(0x01,0x00);
 464   1              LCD_Write_COM(0x00,0x58); LCD_Write_DATA(0x1f,0x0b);
 465   1              LCD_Write_COM(0x00,0x59); LCD_Write_DATA(0x02,0x01);
 466   1              //---------------------------------
 467   1              LCD_Write_COM(0x00,0x20); LCD_Write_DATA(0x00,0x00);  //Set RAM Address
 468   1              LCD_Write_COM(0x00,0x21); LCD_Write_DATA(0x00,0x00);  //Set RAM Address
 469   1              //0x22            RAM Data Write
 470   1              //LCD_CtrlWrite(0x0022);
 471   1              LCD_Write_COM(0x00,0x0f); LCD_Write_DATA(0x1f,0x01);  // Start Oscillation
 472   1              delayms(300);//300ms
 473   1              LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x16);  // Display Control
 474   1              delayms(200);//200ms
 475   1              LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x17);
 476   1              //---------------------------------
 477   1              LCD_CS =1;
 478   1      }
 479          //******************************************************************
 480          //  
 481          //------------------------------------------------------------------
 482          
 483          
 484          


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V7.50   S6D0154                                                               02/15/2014 16:46:16 PAGE 9   

   CODE SIZE        =   1682    ----
   CONSTANT SIZE    =  47569    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      73
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
