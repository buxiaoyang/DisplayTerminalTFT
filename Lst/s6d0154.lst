C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 1   


C51 COMPILER V7.50, COMPILATION OF MODULE S6D0154
OBJECT MODULE PLACED IN Src\s6d0154.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Src\s6d0154.c BROWSE INCDIR(.\Src) DEBUG OBJECTEXTEND PRINT(.\Lst\s6d0154.l
                    -st) SRC(.\Obj\s6d0154.SRC)

line level    source

   1          //#include <reg52.h>
   2          #include "STC_NEW_8051.H"
   3          #include"head.h"        //IO define
   4          
   5          #include"s6d0154_drv.h" //包含_24TFT-OK的正确初始化程序  
   6          
   7          #include"picture.h"
   8          #include"chinese.h"
   9          #include"char.h"
  10          //------------------------------------------------------------------
  11          uint colors[]={
  12          //   0      1      2      3      4      5      6      7
  13          0xf800,0x07e0,0x001f,0xffe0,0x0000,0x07ff,0xf81f,0xffff  //颜色数据
  14          //  红     绿     蓝     黄     黑     青     紫     白
  15          };
  16          //******************************************************************
  17          //  
  18          //------------------------------------------------------------------
  19          void delayms(unsigned int tt) //0.5
  20          {
  21   1          unsigned char i;
  22   1              unsigned char j;
  23   1          while(tt>0)
  24   1          {
  25   2              tt--;
  26   2              for(j=0;j<5;j++)
  27   2                  {
  28   3                          for(i=0;i<168;i++)
  29   3                              {
  30   4                              }
  31   3              }
  32   2          }
  33   1      }
  34          /*
  35          void delay(long tt)
  36          {
  37              while(tt>0)
  38              {
  39                  tt--;
  40              }
  41          }
  42          */
  43          void Write_DATA(unsigned int i,unsigned int j)
  44          {
  45   1          //8080 interface
  46   1          LCD_CS = 0;
  47   1              LCD_DC = 1;
  48   1              LCD_RD = 1;
  49   1              P0  = j;
  50   1              P2  = i;
  51   1              LCD_WR = 0;
  52   1              LCD_WR = 1;
  53   1              LCD_CS = 1;
  54   1      }
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 2   

  55          /*
  56          void Write_DAT_18(unsigned int i,unsigned int j,unsigned int k)
  57          {
  58              //8080 interface
  59              CS0 = 0;
  60                  DC0 = 1;
  61                  RD0 = 1;
  62                  P2  = i;
  63                  P0  = j;
  64                  WR0 = 0;
  65                  WR0 = 1;
  66                  P2  = k;
  67                  WR0 = 0;
  68                  WR0 = 1;
  69                  CS0 = 1;
  70          }
  71          */
  72          void Write_COMD(unsigned int i,unsigned int j)
  73          {
  74   1              //8080 interface
  75   1          LCD_CS = 0;  
  76   1          LCD_RD = 1;
  77   1          LCD_DC = 0;
  78   1              P0  = j;         
  79   1              P2  = i;
  80   1              LCD_WR = 0;
  81   1              LCD_WR = 1;
  82   1              LCD_CS = 1;
  83   1      }
  84          //******************************************************************
  85          //  分颜色显示
  86          //------------------------------------------------------------------
  87          void Display_Red(void)
  88          {  
  89   1          int i,j,k=0;
  90   1           
  91   1              LCD_CS =0;  //打开片选使能
  92   1              Address_set(0,0,239,319);
  93   1              
  94   1          Write_COMD(0x00,0x22); 
  95   1          for(i=0;i<320;i++)
  96   1          {
  97   2              for(j=0;j<240;j++)
  98   2                  {
  99   3                  Write_DATA(0xf8,0x00);//data_out18(0xfc,0x00,0x00);
 100   3                  }
 101   2          }
 102   1      }
 103          void Display_Green(void)
 104          {  
 105   1          int i,j;
 106   1         
 107   1              LCD_CS =0;  //打开片选使能
 108   1              Address_set(0,0,239,319);
 109   1         
 110   1          Write_COMD(0x00,0x22); 
 111   1          for(i=0;i<320;i++)
 112   1          {
 113   2              for(j=0;j<240;j++)
 114   2                  {
 115   3                  Write_DATA(0x07,0xe0);
 116   3                  //Write_Data_18(0x03,0xf0,0x00);
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 3   

 117   3              }
 118   2          }
 119   1      }
 120          void Display_Blue(void)
 121          {  
 122   1          int i,j;
 123   1           
 124   1          Write_COMD(0x00,0x20);
 125   1          Write_DATA(0x00,0x00);
 126   1          Write_COMD(0x00,0x21);
 127   1          Write_DATA(0x00,0x00);
 128   1         
 129   1          Write_COMD(0x00,0x22);
 130   1          for(i=0;i<320;i++)
 131   1          {
 132   2                  for(j=0;j<240;j++)
 133   2              {
 134   3                          Write_DATA(0x00,0x1f);
 135   3                  //Write_Data_18(0x00,0x0f,0xc0);
 136   3              }
 137   2          }
 138   1      }
 139          void Display_White(void)
 140          {
 141   1          int i,j;
 142   1          
 143   1              LCD_CS =0;  //打开片选使能
 144   1              Address_set(0,0,239,319);
 145   1          for(i=0;i<320;i++)
 146   1          {
 147   2              for(j=0;j<240;j++)
 148   2                  {
 149   3                  Write_DATA(0xff,0xff);
 150   3                  //Write_Data_18(0xff,0xff,0xc0);
 151   3              }
 152   2          }
 153   1      }
 154          void Display_Black(void)
 155          {  
 156   1          int i,j,k;
 157   1           
 158   1              LCD_CS =0;  //打开片选使能
 159   1              Address_set(0,0,239,319);
 160   1          for(i=0;i<240;i++)
 161   1          {
 162   2              Write_DATA(0xff,0xff);
 163   2              //Write_DATA_18(0xff,0xff,0xc0);
 164   2          }
 165   1          //---------------------------------
 166   1          for(i=0;i<318;i++)  //加外框
 167   1          {
 168   2              for(k=0;k<1;k++)
 169   2                  {
 170   3                  Write_DATA(0xff,0xff);
 171   3                      //WRITE_DATA_18(0xff,0xff,0xc0);
 172   3                  }
 173   2                  for(j=0;j<238;j++)
 174   2                  {
 175   3                          Write_DATA(0x00,0x00);
 176   3                          //Write_DATA_18(0x00,0x00,0x00);
 177   3                  }
 178   2                  for(k=0;k<1;k++)
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 4   

 179   2                  {
 180   3                      Write_DATA(0xff,0xff);
 181   3                  //Write_DATA_18(0xff,0xff,0xc0);
 182   3                  }
 183   2          }
 184   1          //---------------------------------
 185   1          for(i=0;i<240;i++)
 186   1          {
 187   2              Write_DATA(0xff,0xff);
 188   2              //Write_Data_18(0xff,0xff,0xc0);
 189   2          }
 190   1      }
 191          
 192          void Display_Loding()
 193          {
 194   1              Display_Loading_Image();
 195   1              ChineseChar(50,79,2,colors[4],colors[7],1);             //正
 196   1          ChineseChar(50,122,2,colors[4],colors[7],2);        //在
 197   1          ChineseChar(50,165,2,colors[4],colors[7],3);        //启
 198   1          ChineseChar(50,208,2,colors[4],colors[7],4);        //动
 199   1      }
 200          
 201          //******************************************************************
 202          //  图片显示(仅240*80dot模式)
 203          //------------------------------------------------------------------
 204          void Display_Loading_Image()
 205          {
 206   1          unsigned char i,j;
 207   1              LCD_CS =0;  //打开片选使能
 208   1              //Address_set(0,0,239,319);
 209   1              //Address_set(119,119,239,200);
 210   1              Address_set(100,115,219,214);
 211   1          LCD_DC=1;
 212   1      #pragma asm
 213   1                      mov DPTR, #RaspberryPiLogoBig
 214   1      #pragma endasm
 215   1      //        unsigned int  k=0;
 216   1              
 217   1              for(j=0;j<99;j++)
 218   1              {
 219   2      
 220   2                  for(i=119;i!=0;i--)
 221   2                  {
 222   3                      LCD_WR = 0;
 223   3      #pragma asm
 224   3                      clr A
 225   3                      movc A, @A+DPTR
 226   3                      mov P2, A
 227   3                      inc DPTR
 228   3                      clr A
 229   3                      movc A, @A+DPTR
 230   3                      mov P0, A
 231   3                      inc DPTR
 232   3      #pragma endasm
 233   3                      LCD_WR = 1;
 234   3      //                Write_DATA(Image[k++],Image[k++]);
 235   3                  }
 236   2              }
 237   1      }
 238          
 239          
 240          void Display_Running()
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 5   

 241          {
 242   1              Display_Running_Image();
 243   1          
 244   1          LCD_ShowString(5,5,0,colors[4],colors[7]," !\"#$%&`()*+,-./012");   
 245   1          LCD_ShowString(35,5,0,colors[4],colors[7],"3456789:;<=>?@ABCDE"); 
 246   1          LCD_ShowString(65,5,0,colors[4],colors[7],"FGHIJKLMNOPQRSTUVWX"); 
 247   1          LCD_ShowString(95,5,0,colors[4],colors[7],"YZ[\]^_'abcdefghijk");
 248   1              LCD_ShowString(125,5,0,colors[4],colors[7],"lmnopqrstuvwxyz{|}~");
 249   1              ChineseString(155,70,1,colors[4],colors[7],"0123456789");
 250   1              ChineseString(185,70,1,colors[4],colors[7],":;<=>?@ABC");
 251   1              ChineseString(215,70,1,colors[4],colors[7],"DEFGHIJKLM");
 252   1      }
 253          
 254          void Display_Running_Image()
 255          {
 256   1          unsigned char i,j;
 257   1              LCD_CS =0;  //打开片选使能
 258   1              //Address_set(0,0,239,319);
 259   1              //Address_set(119,119,239,200);
 260   1              Address_set(174,5,233,54);
 261   1          LCD_DC=1;
 262   1      #pragma asm
 263   1                      mov DPTR, #RaspberryPiLogoSmall
 264   1      #pragma endasm
 265   1      //        unsigned int  k=0;
 266   1              
 267   1              for(j=0;j<50;j++)
 268   1              {
 269   2      
 270   2                  for(i=60;i!=0;i--)
 271   2                  {
 272   3                      LCD_WR = 0;
 273   3      #pragma asm
 274   3                      clr A
 275   3                      movc A, @A+DPTR
 276   3                      mov P2, A
 277   3                      inc DPTR
 278   3                      clr A
 279   3                      movc A, @A+DPTR
 280   3                      mov P0, A
 281   3                      inc DPTR
 282   3      #pragma endasm
 283   3                      LCD_WR = 1;
 284   3      //                Write_DATA(Image[k++],Image[k++]);
 285   3                  }
 286   2              }
 287   1      }
 288          //******************************************************************
 289          //  
 290          //------------------------------------------------------------------
 291          void LCD_Writ_Bus(char VH,char VL)      //并行数据写入函数
 292          {
 293   1          LCD_DataPortH=VH;     //高位P口
 294   1              LCD_DataPortL=VL;         //低位P口     
 295   1              LCD_WR=0;
 296   1              LCD_WR=1; 
 297   1      }
 298          void LCD_Write_COM(char VH,char VL)         //发送命令
 299          {       
 300   1          LCD_DC=0;
 301   1              LCD_Writ_Bus(VH,VL);
 302   1      }
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 6   

 303          void LCD_Write_DATA(char VH,char VL)    //发送数据
 304          {
 305   1          LCD_DC=1;
 306   1              LCD_Writ_Bus(VH,VL);
 307   1      }
 308          //******************************************************************
 309          //  
 310          //------------------------------------------------------------------
 311          void Pant(char VH,char VL)
 312          {
 313   1              unsigned char i;
 314   1              unsigned char j;
 315   1              
 316   1              LCD_CS =0;  //打开片选使能
 317   1              Address_set(0,0,239,319);
 318   1          LCD_DataPortH=VH;     //高位P口
 319   1              LCD_DataPortL=VL;         //低位P口     
 320   1          LCD_DC=1;
 321   1          for(i=160;i!=0;i--)
 322   1              {
 323   2              for (j=240;j!=0;j--)
 324   2              {
 325   3                  LCD_WR=0;
 326   3                  LCD_WR=1; 
 327   3                  LCD_WR=0;
 328   3                  LCD_WR=1; 
 329   3                  }
 330   2          }
 331   1          LCD_CS =1;  //关闭片选使能
 332   1      }
 333          void Address_set(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
 334          {
 335   1      
 336   1          LCD_Write_COM(0x00,0x20);LCD_Write_DATA(x1>>8,x1);  //设置X坐标位置
 337   1          LCD_Write_COM(0x00,0x21);LCD_Write_DATA(y1>>8,y1);  //设置Y坐标位置
 338   1                       
 339   1          LCD_Write_COM(0x00,0x37);LCD_Write_DATA(x1>>8,x1);  //开始X
 340   1              LCD_Write_COM(0x00,0x39);LCD_Write_DATA(y1>>8,y1);  //开始Y
 341   1          LCD_Write_COM(0x00,0x36);LCD_Write_DATA(x2>>8,x2);  //结束X
 342   1              LCD_Write_COM(0x00,0x38);LCD_Write_DATA(y2>>8,y2);  //结束Y
 343   1      
 344   1              LCD_Write_COM(0x00,0x22);                                                                                
 345   1      }
 346          //******************************************************************
 347          //  写汉字子函数
 348          //------------------------------------------------------------------
 349          void ChineseChar(uint x,uint y,int size,uint For_color,uint Bk_color ,char c)
 350          {
 351   1      
 352   1          int e,i,j;
 353   1          int  ed;
 354   1         
 355   1          uint  ncols;
 356   1          uint  nrows;
 357   1          uint  nbytes;
 358   1      
 359   1          uchar *pfont;
 360   1          uchar *pchar;
 361   1          uchar *fonttable[]={(uchar *)hz16,(uchar *)hz24 , (uchar *)hz32};
 362   1         
 363   1          pfont=(uchar *)fonttable[size];
 364   1      
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 7   

 365   1                       LCD_CS =0;  //打开片选使能
 366   1          if(size==0)
 367   1          {
 368   2              ncols =16-1;
 369   2              nrows =16-1;
 370   2              nbytes =32;      //(16*16)/8
 371   2          }
 372   1          else
 373   1          {    
 374   2              if(size==1)
 375   2              {
 376   3                  ncols =24-1;
 377   3                  nrows =24-1;
 378   3                  nbytes =72;  //(24*24)/8
 379   3              }
 380   2              else
 381   2              {
 382   3                  if(size==2)
 383   3                  {
 384   4                      ncols =32-1;
 385   4                      nrows =32-1;
 386   4                      nbytes =132;   //(32*32)/8
 387   4                  }
 388   3              }
 389   2          }
 390   1          pchar=pfont + (nbytes*(c-1));
 391   1      
 392   1          Address_set(x,  y, x+nrows,y+ncols);
 393   1          //---------------------------------
 394   1          for(i=0;i<nbytes;i++)
 395   1          {
 396   2              ed=*pchar++;
 397   2              if(size==0)
 398   2              {
 399   3                  if(i%2==0)
 400   3                      e=8;
 401   3                  else
 402   3                      e=4;
 403   3              }
 404   2              else
 405   2                  e=8;
 406   2              for(j=0;j<e;j++)
 407   2              {//unsigned char temp;
 408   3                  if((ed>>j)&0x01)
 409   3                  { 
 410   4                     //temp = For_color&0x00ff
 411   4                         LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 412   4                      }
 413   3                  else
 414   3                  {
 415   4                      LCD_Write_DATA( Bk_color>>8 ,  Bk_color);  //backcolor
 416   4                      }
 417   3              }
 418   2          }
 419   1              LCD_CS =1;  //关闭片选使能
 420   1      }
 421          
 422          
 423          void ChineseString(uint x,uint y,int size,uint For_color,uint Bk_color ,char *p)
 424          {         
 425   1          while(*p!='\0')
 426   1          {       
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 8   

 427   2                      ChineseChar(x,y,size,For_color,Bk_color,*p - 47);
 428   2              y+=24;
 429   2              p++;
 430   2          }
 431   1      }
 432          
 433          //******************************************************************
 434          //  字符显示子函数
 435          //------------------------------------------------------------------
 436          void LCD_ShowChar(uint x,uint y,uint size, For_color,uint Bk_color, char ch)
 437          {       
 438   1          uchar temp , Bytes;
 439   1          uchar pos,t;
 440   1          uint  CHAR_W,CHAR_H;
 441   1          //CHAR_W = 8;         //8*16
 442   1          //CHAR_H = 16;
 443   1              LCD_CS =0;  //打开片选使能
 444   1      
 445   1              if(size == 0)
 446   1              {
 447   2                  CHAR_W = 24;         //16*24
 448   2                  CHAR_H = 16;
 449   2              }
 450   1              else if(size == 1)
 451   1              {
 452   2      
 453   2              }
 454   1      
 455   1          if(x>(LCD_SIZE_X-CHAR_W)||y>(LCD_SIZE_Y-CHAR_H))
 456   1              return;
 457   1         
 458   1          Address_set(x, y, x+CHAR_W-1, y+CHAR_H-1);
 459   1          ch = ch-32;                       //按照ASCII编码顺序的到相应字母的编码
 460   1          Bytes = (CHAR_W*CHAR_H)/8;
 461   1          for(pos=0;pos<Bytes;pos++)  //CHAR_H        (CHAR_W*CHAR_H)/8
 462   1          {
 463   2              //temp= Font8x16[ch][pos];
 464   2              //temp= Font16x24[ch][pos];
 465   2                      if(size == 0)
 466   2                      {
 467   3                              temp= Font16x24[ch][pos];
 468   3                      }
 469   2                      else if(size == 1)
 470   2                      {
 471   3                              
 472   3                      }
 473   2              
 474   2            
 475   2              for(t=0;t<8;t++) //CHAR_W
 476   2              {                 
 477   3                     if(temp&0x80)
 478   3                         LCD_Write_DATA(For_color>>8 , For_color  );  //textcolor
 479   3                     else 
 480   3                         LCD_Write_DATA(Bk_color>>8 , Bk_color );  //backcolor
 481   3                  temp<<=1; 
 482   3              }
 483   2          }
 484   1              LCD_CS =1;  //关闭片选使能
 485   1      }  
 486          //******************************************************************
 487          //  显示字符串子函数    x,y:起点坐标    *p:字符串起始地址
 488          //------------------------------------------------------------------
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 9   

 489          void LCD_ShowString(uint x,uint y, uint size, uint For_color,uint Bk_color,char *p)
 490          {         
 491   1          while(*p!='\0')
 492   1          {       
 493   2              LCD_ShowChar(x,y,size, For_color,Bk_color,*p);
 494   2              y+=16;
 495   2              p++;
 496   2          }
 497   1      }
 498          //******************************************************************
 499          //  
 500          //------------------------------------------------------------------
 501          void LCD_Init(void)
 502          {
 503   1      //    LCD_RST=1;
 504   1      //    delayms(5);
 505   1              LCD_RST=0;
 506   1              delayms(5);
 507   1              LCD_RST=1;
 508   1      //      delayms(5);
 509   1              LCD_CS =0;  //打开片选使能
 510   1          //---------------------------------
 511   1              LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x00,0x00);  // Power Control 1  current consumption  STB
 512   1              delayms(10);
 513   1              
 514   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x00,0x1c);  // Power Control 2
 515   1              LCD_Write_COM(0x00,0x12); LCD_Write_DATA(0x12,0x12);  // Power Control 3  BT2-0, DC11-10, DC21-20, DC31-3
             -0
 516   1              LCD_Write_COM(0x00,0x13); LCD_Write_DATA(0x00,0x41);  // Power Control 4  DCR_EX=0, DCR2-0, GVD6-0
 517   1              LCD_Write_COM(0x00,0x14); LCD_Write_DATA(0x40,0x50);  // Power Control 5  VCOMG=0, VCM6-0, VCMR=0, VML6-0
 518   1              LCD_Write_COM(0x00,0x10); LCD_Write_DATA(0x08,0x00);  // Power Control 1 
 519   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x01,0x1c);  // Power Control 2
 520   1              delayms(300);//300ms
 521   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x03,0x1c);  // Power Control 2
 522   1              delayms(300);//300ms
 523   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x07,0x1c);  // Power Control 2
 524   1              delayms(300);//300ms
 525   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x1c);  // Power Control 2
 526   1              delayms(600);//600ms
 527   1              LCD_Write_COM(0x00,0x11); LCD_Write_DATA(0x0f,0x39);  // Power Control 2
 528   1              delayms(500);//500ms
 529   1              LCD_Write_COM(0x00,0x01); LCD_Write_DATA(0x01,0x28);  // Driver Output Control
 530   1              LCD_Write_COM(0x00,0x02); LCD_Write_DATA(0x01,0x00);  // LCD-Driving-Waveform Control
 531   1              LCD_Write_COM(0x00,0x03); LCD_Write_DATA(0x10,0x30);  // Entry Mode
 532   1              LCD_Write_COM(0x00,0x08); LCD_Write_DATA(0x08,0x08);  // Frame Cycle Control 
 533   1              LCD_Write_COM(0x00,0x0b); LCD_Write_DATA(0x11,0x05);  // Frame Cycle Control
 534   1              LCD_Write_COM(0x00,0x0c); LCD_Write_DATA(0x00,0x00);  // External Display Interface Control 
 535   1          //---------------------------------
 536   1          LCD_Write_COM(0x00,0x15); LCD_Write_DATA(0x00,0x20);  //VCI Recycling (R15H)                //              VCIR=010         0X0020
 537   1              LCD_Write_COM(0x00,0x30); LCD_Write_DATA(0x00,0x00);  //                SCN 0   Start from G1
 538   1              LCD_Write_COM(0x00,0x34); LCD_Write_DATA(0x01,0x3f);  //                SE1 = 100111111( 319)
 539   1              LCD_Write_COM(0x00,0x35); LCD_Write_DATA(0x00,0x00);  //                SS1 = 000000000
 540   1              LCD_Write_COM(0x00,0x36); LCD_Write_DATA(0x00,0xef);  //                HEA = 011101111(239)
 541   1              LCD_Write_COM(0x00,0x37); LCD_Write_DATA(0x00,0x00);  //                HSA = 000000000 
 542   1              LCD_Write_COM(0x00,0x38); LCD_Write_DATA(0x01,0x3f);  //                VEA = 100111111( 319)
 543   1          LCD_Write_COM(0x00,0x39); LCD_Write_DATA(0x00,0x00);  //            VSA = 000000000 
 544   1          LCD_Write_COM(0x00,0x50); LCD_Write_DATA(0x01,0x01);  // Gamma Control
 545   1          //---------------------------------
 546   1              LCD_Write_COM(0x00,0x51); LCD_Write_DATA(0x09,0x03);
 547   1              LCD_Write_COM(0x00,0x52); LCD_Write_DATA(0x0b,0x08);
 548   1              LCD_Write_COM(0x00,0x53); LCD_Write_DATA(0x08,0x05);
 549   1              LCD_Write_COM(0x00,0x54); LCD_Write_DATA(0x01,0x01);
C51 COMPILER V7.50   S6D0154                                                               02/16/2014 16:48:47 PAGE 10  

 550   1              LCD_Write_COM(0x00,0x55); LCD_Write_DATA(0x0d,0x06);
 551   1              LCD_Write_COM(0x00,0x56); LCD_Write_DATA(0x0e,0x0a);
 552   1              LCD_Write_COM(0x00,0x57); LCD_Write_DATA(0x01,0x00);
 553   1              LCD_Write_COM(0x00,0x58); LCD_Write_DATA(0x1f,0x0b);
 554   1              LCD_Write_COM(0x00,0x59); LCD_Write_DATA(0x02,0x01);
 555   1              //---------------------------------
 556   1              LCD_Write_COM(0x00,0x20); LCD_Write_DATA(0x00,0x00);  //Set RAM Address
 557   1              LCD_Write_COM(0x00,0x21); LCD_Write_DATA(0x00,0x00);  //Set RAM Address
 558   1              //0x22            RAM Data Write
 559   1              //LCD_CtrlWrite(0x0022);
 560   1              LCD_Write_COM(0x00,0x0f); LCD_Write_DATA(0x1f,0x01);  // Start Oscillation
 561   1              delayms(300);//300ms
 562   1              LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x16);  // Display Control
 563   1              delayms(200);//200ms
 564   1              LCD_Write_COM(0x00,0x07); LCD_Write_DATA(0x00,0x17);
 565   1              //---------------------------------
 566   1              LCD_CS =1;
 567   1      }
 568          //******************************************************************
 569          //  
 570          //------------------------------------------------------------------
 571          
 572          
 573          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2237    ----
   CONSTANT SIZE    =  37461    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      90
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
